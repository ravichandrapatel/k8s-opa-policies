apiVersion: templates.gatekeeper.sh/v1
kind: ConstraintTemplate
metadata:
  name: k8spspemptydir
  annotations:
    metadata.gatekeeper.sh/title: "Empty dir volume"
    metadata.gatekeeper.sh/version: 1.0.2
    description: >-
      Controls usage of the empty dir. Corresponds to the
      `emptyDir` field in a PodSecurityPolicy. For more information,
      see
      https://kubernetes.io/docs/concepts/policy/pod-security-policy/#volumes-and-file-systems
spec:
  crd:
    spec:
      names:
        kind: k8sPSPEmptyDir
      validation:
        # Schema for the `parameters` field (currently empty)
        openAPIV3Schema:
          type: object
          description: >-
            Controls usage of the empty dir. Corresponds to the
            `emptyDir` field in a PodSecurityPolicy. For more information,
            see
            https://kubernetes.io/docs/concepts/policy/pod-security-policy/#volumes-and-file-systems
          properties: {}
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package k8spspemptydir

        import data.lib.exclude_update.is_update

        violation[{"msg": msg, "details": {}}] {
          # spec.volumes field is immutable.
          not is_update(input.review)

          volume := input_emptydir_volumes[_]
          msg := sprintf("EmptyDir volume %v is not allowed, pod: %v", [volume, input.review.object.metadata.name])
        }

        input_emptydir_volumes[v] {
          v := input.review.object.spec.volumes[_]
          has_field(v, "emptyDir")
        }

        # has_field returns whether an object has a field
        has_field(object, field) = true {
          object[field]
        }

        input_containers[c] {
          c := input.review.object.spec.containers[_]
        }

        input_containers[c] {
          c := input.review.object.spec.initContainers[_]
        }

        input_containers[c] {
          c := input.review.object.spec.ephemeralContainers[_]
        }

      libs:
        - |
          package lib.exclude_update

          is_update(review) {
            review.operation == "UPDATE"
          }
